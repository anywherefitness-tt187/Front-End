[{"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\index.js":"1","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\reportWebVitals.js":"2","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\App.js":"3","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorDashboard.js":"4","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorCreate.js":"5","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\User.js":"6","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Home.js":"7","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\NavBar.js":"8","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor.js":"9","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorClass.js":"10","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorHome.js":"11"},{"size":567,"mtime":1608443617749,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1608178925675,"results":"14","hashOfConfig":"13"},{"size":587,"mtime":1608447267835,"results":"15","hashOfConfig":"13"},{"size":1181,"mtime":1608446937874,"results":"16","hashOfConfig":"13"},{"size":8003,"mtime":1608446814678,"results":"17","hashOfConfig":"13"},{"size":145,"mtime":1608260631413,"results":"18","hashOfConfig":"13"},{"size":507,"mtime":1608260631413,"results":"19","hashOfConfig":"13"},{"size":471,"mtime":1608260631413,"results":"20","hashOfConfig":"13"},{"size":157,"mtime":1608260631413,"results":"21","hashOfConfig":"13"},{"size":1597,"mtime":1608445621725,"results":"22","hashOfConfig":"13"},{"size":1139,"mtime":1608446931758,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"119rrdn",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"33"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\index.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\reportWebVitals.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\App.js",["51","52"],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorDashboard.js",["53"],"import React,{useState} from 'react';\r\nimport {Button,Card,CardTitle,CardText,CardSubtitle} from 'reactstrap';\r\nimport {useHistory} from 'react-router-dom';\r\nimport InstructorClass from './InstructorClass';\r\n\r\nfunction InstructorDashboard({classList,setClassList}){\r\nconst history=useHistory();\r\n\r\nconst handleClick=(e)=>{\r\n e.preventDefault();\r\n history.push('/instructor/instructorcreate');\r\n}\r\n\r\nreturn(\r\n    <div className=\"ins_dashboard\">\r\n        <Card className=\"ins_card\">\r\n        <CardTitle tag=\"h5\">Welcome to Anywhere Fitness!</CardTitle>\r\n        <CardText>As an instructor of Anywhere Fitness, you can create new classes! Also, update and delete them.\r\n        </CardText>\r\n        <div className=\"ins_classlist\">\r\n           {classList.length !==0 ? classList.map(item=>(\r\n                <InstructorClass classList={item} key={item.class_id} />\r\n            )) : <CardSubtitle tag=\"h6\"> No current classes, Please go ahead and click Create New Class below :</CardSubtitle>\r\n           }\r\n        </div>\r\n            <Button color=\"primary\" onClick={handleClick}>Create your New Class!</Button>\r\n        </Card>\r\n    </div>\r\n)\r\n}\r\nexport default InstructorDashboard;",["54","55"],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorCreate.js",["56","57","58"],"import React,{useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Form,FormGroup,Input,Label,Button,Badge} from 'reactstrap';\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { date } from 'yup/lib/locale';\r\n\r\nfunction InstructorCreate({setClassList}){\r\n    const history=useHistory();\r\n    \r\n    const [classInfo, setClassInfo]=useState({\r\n        class_id:Date.now(),\r\n        class_name:\"\",\r\n        class_description:\"\",\r\n        class_type:\"\",\r\n        class_intensity:\"\",\r\n        class_location:\"\",\r\n        class_starttime:\"\",\r\n        class_duration:\"\",\r\n        class_maxsize:\"\",\r\n        \r\n    })\r\n\r\n    // control whether or not the form can be submitted if there are errors in form validation (in the useEffect)\r\n    const [buttonIsDisabled, setButtonIsDisabled] = useState(true);\r\n\r\n    // server error\r\n    const [serverError, setServerError] = useState(\"\");\r\n\r\n    // managing state for errors. empty unless inline validation (validateInput) updates key/value pair to have error\r\n      const [errors, setErrors] = useState({\r\n        class_name:\"\",\r\n        class_description:\"\",\r\n        class_type:\"\",\r\n        class_intensity:\"\",\r\n        class_location:\"\",\r\n        class_starttime:\"\",\r\n        class_duration:\"\",\r\n        class_maxsize:\"\",\r\n      });\r\n\r\n      const handleChange=(e)=>{\r\n        e.persist();\r\n        const newClassInfo = {\r\n            ...classInfo,\r\n            [e.target.name]:e.target.value\r\n          };\r\n          validateChange(e); // for each change in input, do inline validation\r\n          console.log('After validate err State=', errors)\r\n          setClassInfo(newClassInfo); // update state with new data\r\n    }\r\n\r\n    //inline validation of one key-value pair at a time with yup\r\n  const validateChange =(e)=>{\r\n    yup.reach(formSchema, e.target.name)\r\n    .validate(e.target.value)\r\n    .then((valid) => {\r\n      // the input is passing ! & reset of that input's error\r\n      console.log(\"valid here\", e.target.name);\r\n      setErrors({ ...errors, [e.target.name]: \"\" });\r\n    })\r\n    .catch((err) => {\r\n      // the input is breaking form schema\r\n      console.log(\"err here\", err);\r\n      setErrors({ ...errors, [e.target.name]: err.errors[0] });\r\n    });\r\n }\r\n\r\n  // whenever state updates, validate the entire form.\r\n  // if valid, then change button to be enabled.\r\n  useEffect(() => {\r\n    formSchema.isValid(classInfo).then((valid) => {\r\n      console.log(\"is my form valid?\", valid);\r\n      // valid is a boolean \r\n      setButtonIsDisabled(!valid);\r\n    });\r\n  }, [classInfo]);\r\n\r\n  // Add a schema, used for all validation to determine whether the input is valid or not\r\n  const formSchema = yup.object().shape({\r\n    class_name: yup.string()\r\n    .min(2,\"Please enter name of atleast 2 characters\")\r\n    .required(\"ClassName is required!\"),\r\n    \r\n    class_description:yup.string(),\r\n\r\n    class_type:yup.string().required(\"Choose Type is required!\"),\r\n\r\n    class_intensity: yup.string()\r\n    .oneOf([\"Beginner\",\"Intermediate\",\"Advanced\"])\r\n    .required(\"Please choose one\"),\r\n\r\n    class_location: yup.string().required(\"Location is required!\"),\r\n\r\n    class_starttime: yup.string().required(\"date & time is required!\"),\r\n\r\n    class_duration:yup.string().required(\"Duration is required!\"),\r\n    \r\n    class_maxsize:yup.string().required(\"Maxsize is required!\"),\r\n  });\r\n\r\n  const url = 'xxx.herokuapp.com';\r\n\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    console.log('on submit=',classInfo)\r\n    axios //to be replaced with axiosWithAuth once login is ready\r\n          .post(`https://jsonplaceholder.typicode.com/posts`, classInfo)\r\n          .then((res)=>{\r\n            console.log('Response back from reqres:',res.data)\r\n            setClassList(res.data)\r\n            history.push('/dashboard/classes')\r\n            //clear server error\r\n            setServerError(null);      \r\n          })\r\n          .catch((err)=>{\r\n            console.log('server erro in post',err)\r\n            setServerError(\"oops! Looks like server side error!\");\r\n          }) \r\n          \r\n  }\r\n\r\nreturn(\r\n    <>\r\n    <h3>Hello Instructor Name! <br/><Badge color=\"primary\">Create new Class</Badge></h3>\r\n    <div className=\"ins_create\">\r\n        <Form onSubmit={handleSubmit}\r\n         name=\"inscreate\">\r\n        {serverError && <p className=\"error\">{serverError}</p>}\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_name\">Class Name</Label>\r\n            <Input name=\"class_name\"\r\n            id=\"class_name\"\r\n            value={classInfo.class_name}\r\n            onChange={handleChange}\r\n            placeholder=\"Burn With us!\"/>\r\n             {errors.class_name.length > 0 ? <p className=\"error\">{errors.class_name}</p> : null}\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_description\">Class Description</Label>\r\n            <Input name=\"class_description\"\r\n            id=\"class_description\"\r\n            type=\"textarea\"\r\n            row=\"4\"\r\n            value={classInfo.class_description}\r\n            onChange={handleChange}\r\n            placeholder=\"Pre-requisites, things to bring...\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_type\">Class Type</Label>\r\n            <Input\r\n            name=\"class_type\"\r\n            type=\"select\"\r\n            id=\"class_type\"\r\n            value={classInfo.class_type}\r\n            onChange={handleChange}>\r\n            <option value=\"\">***Please Choose One!***</option>\r\n            <option>Strength Training</option>\r\n            <option>Spin Class</option>\r\n            <option>Power Lift</option>\r\n            <option>Yoga</option>\r\n            <option>Pilates</option>\r\n            </Input> \r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_intensity\">Class Intensity</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"class_intensity\"\r\n            id=\"class_intensity\"\r\n            value={classInfo.class_intensity}\r\n            onChange={handleChange}>\r\n            <option value=\"\">***Please Choose One!***</option>\r\n            <option>Beginner</option>\r\n            <option>Intermediate</option>\r\n            <option>Advanced</option>\r\n            </Input> \r\n            </FormGroup>\r\n{/* q: backend, 4 fields for location? */}\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_location\">Class Location</Label>\r\n            <Input name=\"class_location\"\r\n            id=\"class_location\"\r\n            value={classInfo.class_location}\r\n            onChange={handleChange}\r\n            placeholder=\"Street,City,State,Zip\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_starttime\">Class Start Time</Label>\r\n            <Input name=\"class_starttime\"\r\n            id=\"class_starttime\"\r\n            type=\"datetime-local\"\r\n            value={classInfo.class_startime}\r\n            onChange={handleChange}\r\n            placeholder=\"00:00\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_duration\">Class Duration</Label>\r\n            <Input name=\"class_duration\"\r\n            id=\"class_duration\"\r\n            type=\"number\"\r\n            value={classInfo.class_duration}\r\n            onChange={handleChange}\r\n            placeholder=\"30minutes\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_maxsize\">Class Max Size</Label>\r\n            <Input name=\"class_maxsize\"\r\n            id=\"class_maxsize\"\r\n            type=\"number\"\r\n            min=\"3\"\r\n            max=\"50\"\r\n            value={classInfo.class_maxsize}\r\n            onChange={handleChange}\r\n            />\r\n            </FormGroup>\r\n            <Button color=\"success\"\r\n            className=\"btn-lg  btn-block\"\r\n            type=\"submit\"\r\n            disabled={buttonIsDisabled}>Create Class</Button>\r\n        </Form>\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default InstructorCreate;\r\n\r\n\r\n ","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\User.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Home.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\NavBar.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorClass.js",["59","60","61","62","63"],"import React,{useState} from 'react';\r\nimport {Button,Card,CardTitle,CardText,CardSubtitle, CardBody} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesome } from 'react-icons/fa';\r\nimport { FaMapMarker,FaRegCalendar,FaClock} from 'react-icons/fa';\r\nimport { IconName,GiWeightLiftingUp,GiDuration } from \"react-icons/gi\";\r\nimport {IconContext} from \"react-icons\";\r\n \r\n \r\nfunction InstructorClass({classList}){\r\n \r\nreturn(\r\n    <div className=\"ins_classes\">\r\n       <h3>Here are your Classes!</h3>\r\n        <Card className=\"ins_classcard\">\r\n        <CardTitle tag=\"h5\">{classList.class_name} in Anywhere Fitness!</CardTitle>\r\n        <CardText className=\"ins_desc\">{classList.class_description}</CardText>\r\n        <CardSubtitle>{classList.class_type}</CardSubtitle>\r\n        <CardBody>\r\n        <IconContext.Provider value={{style:{ color: \"rgb(117, 239, 255)\"}}}>\r\n           <CardSubtitle>  <GiWeightLiftingUp/> Intensity: {classList.class_intensity}</CardSubtitle>\r\n         \r\n             <CardText><FaMapMarker/>{classList.class_location}</CardText>\r\n            \r\n             <CardText> <FaRegCalendar/>{classList.class_starttime.slice(0,10)}</CardText>\r\n\r\n             <CardText> <FaClock/> {classList.class_starttime.slice(11)}</CardText>\r\n\r\n             <CardText><GiDuration/> Duration :{classList.class_duration}</CardText>\r\n                         \r\n             </IconContext.Provider>\r\n             <CardText>Max Class Size:{classList.class_maxsize}</CardText>\r\n             </CardBody>\r\n        </Card>\r\n    </div>\r\n)\r\n}\r\nexport default InstructorClass;","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorHome.js",["64"],"import React,{useState} from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport InstructorDashboard from './InstructorDashboard';\r\nimport InstructorCreate from './InstructorCreate';\r\n\r\nexport default function InstructorHome() {\r\n    const initialClass=[{\r\n        class_name:\"Burn More\",\r\n        class_description:\"Burn More, Strengthen and Stretch\",\r\n        class_type:\"Strength Traning\",\r\n        class_intensity:\"Advanced\",\r\n        class_location:\"22nd North St,Portland,OR 97235\",\r\n        class_starttime:\"2020-12-28T22:17\",\r\n        class_duration:\"45\",\r\n        class_maxsize:\"30\",\r\n        class_id:1\r\n        },\r\n]\r\n   //make this classList to context  \r\n  const [classList,setClassList]=useState(initialClass);\r\n  console.log('classList=',classList);\r\n\r\n  return (\r\n      <div className=\"ins_home\">\r\n        <Route exact path=\"/instructor\">\r\n          <InstructorDashboard classList={classList} setClassList={setClassList}/>\r\n        </Route>\r\n     \r\n\r\n      <Route exact path=\"/instructor/instructorcreate\">\r\n            <InstructorCreate setClassList={setClassList}/>\r\n      </Route>\r\n\r\n      </div>\r\n  )\r\n}",{"ruleId":"65","severity":1,"message":"66","line":1,"column":15,"nodeType":"67","messageId":"68","endLine":1,"endColumn":23},{"ruleId":"65","severity":1,"message":"69","line":2,"column":32,"nodeType":"67","messageId":"68","endLine":2,"endColumn":38},{"ruleId":"65","severity":1,"message":"66","line":1,"column":15,"nodeType":"67","messageId":"68","endLine":1,"endColumn":23},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"65","severity":1,"message":"74","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":77,"column":6,"nodeType":"77","endLine":77,"endColumn":17,"suggestions":"78"},{"ruleId":"65","severity":1,"message":"79","line":102,"column":9,"nodeType":"67","messageId":"68","endLine":102,"endColumn":12},{"ruleId":"65","severity":1,"message":"66","line":1,"column":15,"nodeType":"67","messageId":"68","endLine":1,"endColumn":23},{"ruleId":"65","severity":1,"message":"80","line":2,"column":9,"nodeType":"67","messageId":"68","endLine":2,"endColumn":15},{"ruleId":"65","severity":1,"message":"81","line":3,"column":9,"nodeType":"67","messageId":"68","endLine":3,"endColumn":13},{"ruleId":"65","severity":1,"message":"82","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":21},{"ruleId":"65","severity":1,"message":"83","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":18},{"ruleId":"65","severity":1,"message":"69","line":2,"column":17,"nodeType":"67","messageId":"68","endLine":2,"endColumn":23},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'date' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["86"],"'url' is assigned a value but never used.","'Button' is defined but never used.","'Link' is defined but never used.","'FontAwesome' is defined but never used.","'IconName' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},"Update the dependencies array to be: [classInfo, formSchema]",{"range":"89","text":"90"},[2580,2591],"[classInfo, formSchema]"]
