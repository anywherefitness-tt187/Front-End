[{"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\index.js":"1","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\reportWebVitals.js":"2","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\App.js":"3","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorDashboard.js":"4","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\User.js":"5","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Home.js":"6","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\NavBar.js":"7","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorClass.js":"8","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorHome.js":"9","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorCreateForm.js":"10","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorUpdateForm.js":"11","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\InstructorLogin.js":"12","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Register.js":"13","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\PrivateRoute.js":"14","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\utils\\axiosWithAuth.js":"15"},{"size":567,"mtime":1608448203526,"results":"16","hashOfConfig":"17"},{"size":375,"mtime":1608178925675,"results":"18","hashOfConfig":"17"},{"size":653,"mtime":1609222001317,"results":"19","hashOfConfig":"17"},{"size":1215,"mtime":1609222001317,"results":"20","hashOfConfig":"17"},{"size":145,"mtime":1608260631413,"results":"21","hashOfConfig":"17"},{"size":507,"mtime":1608260631413,"results":"22","hashOfConfig":"17"},{"size":471,"mtime":1608260631413,"results":"23","hashOfConfig":"17"},{"size":2182,"mtime":1609223894676,"results":"24","hashOfConfig":"17"},{"size":2035,"mtime":1609222001321,"results":"25","hashOfConfig":"17"},{"size":8105,"mtime":1609223894676,"results":"26","hashOfConfig":"17"},{"size":8562,"mtime":1609223894676,"results":"27","hashOfConfig":"17"},{"size":2763,"mtime":1609139794191,"results":"28","hashOfConfig":"17"},{"size":5669,"mtime":1609222001321,"results":"29","hashOfConfig":"17"},{"size":466,"mtime":1608260585323,"results":"30","hashOfConfig":"17"},{"size":329,"mtime":1609223894684,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"119rrdn",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\index.js",[],["65","66"],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\reportWebVitals.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\App.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorDashboard.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\User.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Home.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\NavBar.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorClass.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorHome.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorCreateForm.js",["67"],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorUpdateForm.js",["68","69","70","71"],"import React,{useState,useEffect} from 'react';\r\nimport {useHistory,useParams} from 'react-router-dom';\r\nimport { Form,FormGroup,Input,Label,Button} from 'reactstrap';\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\nimport { axiosWithAuth } from '../utils/axiosWithAuth';\r\n \r\n\r\nfunction InstructorUpdateForm({classList,setClassList}){\r\n\r\n    const history=useHistory();\r\n    const params = useParams(); \r\n \r\n    // set classInfo by getting the class from id param and axios call\r\n    // useEffect(()=>{\r\n    //     axios.get(`${baseUrl}/api/instructor/classlist`)\r\n    //     .then(res=>{\r\n    //         console.log('res in .get update=',res)\r\n    //         const updateClass=res.data.find(item=>item.id === Number(params.id));\r\n    //         setClassInfo(updateClass)\r\n    //     })\r\n    //     .catch(err=>{\r\n    //         console.log('err in .get update',err)\r\n    //     })\r\n\r\n    // },[])\r\n\r\n    const updateClass=classList.find(item=>item.class_id === Number(params.id))\r\n    const [classInfo, setClassInfo]=useState(updateClass);\r\n    console.log('update classlist',classInfo);\r\n    // control whether or not the form can be submitted if there are errors in form validation (in the useEffect)\r\n    const [buttonIsDisabled, setButtonIsDisabled] = useState(true);\r\n\r\n    // server error\r\n    const [serverError, setServerError] = useState(\"\");\r\n\r\n    // managing state for errors. empty unless inline validation (validateInput) updates key/value pair to have error\r\n      const [errors, setErrors] = useState({\r\n        class_name:\"\",\r\n        class_description:\"\",\r\n        class_type:\"\",\r\n        class_intensity:\"\",\r\n        class_location:\"\",\r\n        class_starttime:\"\",\r\n        class_duration:\"\",\r\n        class_maxsize:\"\",\r\n      });\r\n\r\n      const handleChange=(e)=>{\r\n        e.persist();\r\n        const newClassInfo = {\r\n            ...classInfo,\r\n            [e.target.name]:e.target.value\r\n          };\r\n          validateChange(e); // for each change in input, do inline validation\r\n          console.log('After validate err State=', errors)\r\n          setClassInfo(newClassInfo); // update state with new data\r\n    }\r\n\r\n    //inline validation of one key-value pair at a time with yup\r\n  const validateChange =(e)=>{\r\n    yup.reach(formSchema, e.target.name)\r\n    .validate(e.target.value)\r\n    .then((valid) => {\r\n      // the input is passing ! & reset of that input's error\r\n      console.log(\"valid here\", e.target.name);\r\n      setErrors({ ...errors, [e.target.name]: \"\" });\r\n    })\r\n    .catch((err) => {\r\n      // the input is breaking form schema\r\n      console.log(\"err here\", err);\r\n      setErrors({ ...errors, [e.target.name]: err.errors[0] });\r\n    });\r\n }\r\n\r\n  // whenever state updates, validate the entire form.\r\n  // if valid, then change button to be enabled.\r\n  useEffect(() => {\r\n    formSchema.isValid(classInfo).then((valid) => {\r\n      console.log(\"is my form valid?\", valid);\r\n      // valid is a boolean \r\n      setButtonIsDisabled(!valid);\r\n    });\r\n  }, [classInfo]);\r\n\r\n  // Add a schema, used for all validation to determine whether the input is valid or not\r\n  const formSchema = yup.object().shape({\r\n    class_name: yup.string()\r\n    .min(2,\"Please enter name of atleast 2 characters\")\r\n    .required(\"ClassName is required!\"),\r\n    \r\n    class_description:yup.string(),\r\n\r\n    class_type:yup.string().required(\"Choose Type is required!\"),\r\n\r\n    class_intensity: yup.string()\r\n    .oneOf([\"Beginner\",\"Intermediate\",\"Advanced\"])\r\n    .required(\"Please choose one\"),\r\n\r\n    class_location: yup.string().required(\"Location is required!\"),\r\n\r\n    class_starttime: yup.string().required(\"date & time is required!\"),\r\n\r\n    class_duration:yup.string().required(\"Duration is required!\"),\r\n    \r\n    class_maxsize:yup.string().required(\"Maxsize is required!\"),\r\n  });\r\n\r\n  const url = 'xxx.herokuapp.com';\r\n\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    console.log('on submit=',classInfo)\r\n    axiosWithAuth() \r\n          .post(`https://jsonplaceholder.typicode.com/posts`, classInfo)\r\n          .then((res)=>{\r\n            console.log('Response back from reqres:',res.data)\r\n            // setClassList([res.data)\r\n            history.push('/instructor/dashboard')\r\n            //clear server error\r\n            setServerError(null);      \r\n          })\r\n          .catch((err)=>{\r\n            console.log('server erro in post',err)\r\n            setServerError(\"oops! Looks like server side error!\");\r\n          }) \r\n          \r\n  }\r\n\r\nreturn(\r\n    <>\r\n    <h4>Update your class : {classInfo.class_name}!</h4>\r\n    <div className=\"ins_create\">\r\n        <Form onSubmit={handleSubmit}\r\n         name=\"inscreate\">\r\n        {serverError && <p className=\"error\">{serverError}</p>}\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_name\">Class Name</Label>\r\n            <Input name=\"class_name\"\r\n            id=\"class_name\"\r\n            value={classInfo.class_name}\r\n            onChange={handleChange}\r\n            placeholder=\"Burn With us!\"/>\r\n             {errors.class_name.length > 0 ? <p className=\"error\">{errors.class_name}</p> : null}\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_description\">Class Description</Label>\r\n            <Input name=\"class_description\"\r\n            id=\"class_description\"\r\n            type=\"textarea\"\r\n            row=\"4\"\r\n            value={classInfo.class_description}\r\n            onChange={handleChange}\r\n            placeholder=\"Pre-requisites, things to bring...\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_type\">Class Type</Label>\r\n            <Input\r\n            name=\"class_type\"\r\n            type=\"select\"\r\n            id=\"class_type\"\r\n            value={classInfo.class_type}\r\n            onChange={handleChange}>\r\n            <option value=\"\">***Please Choose One!***</option>\r\n            <option>Strength Training</option>\r\n            <option>Spin Class</option>\r\n            <option>Power Lift</option>\r\n            <option>Yoga</option>\r\n            <option>Pilates</option>\r\n            </Input> \r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_intensity\">Class Intensity</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"class_intensity\"\r\n            id=\"class_intensity\"\r\n            value={classInfo.class_intensity}\r\n            onChange={handleChange}>\r\n            <option value=\"\">***Please Choose One!***</option>\r\n            <option>Beginner</option>\r\n            <option>Intermediate</option>\r\n            <option>Advanced</option>\r\n            </Input> \r\n            </FormGroup>\r\n{/* q: backend, 4 fields for location? */}\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_location\">Class Location</Label>\r\n            <Input name=\"class_location\"\r\n            id=\"class_location\"\r\n            value={classInfo.class_location}\r\n            onChange={handleChange}\r\n            placeholder=\"Street,City,State,Zip\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_starttime\">Class Start Time</Label>\r\n            <Input name=\"class_starttime\"\r\n            id=\"class_starttime\"\r\n            type=\"datetime-local\"\r\n            value={classInfo.class_startime}\r\n            onChange={handleChange}\r\n            placeholder=\"00:00\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_duration\">Class Duration</Label>\r\n            <Input name=\"class_duration\"\r\n            id=\"class_duration\"\r\n            type=\"number\"\r\n            value={classInfo.class_duration}\r\n            onChange={handleChange}\r\n            placeholder=\"30minutes\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_maxsize\">Class Max Size</Label>\r\n            <Input name=\"class_maxsize\"\r\n            id=\"class_maxsize\"\r\n            type=\"number\"\r\n            min=\"3\"\r\n            max=\"50\"\r\n            value={classInfo.class_maxsize}\r\n            onChange={handleChange}\r\n            />\r\n            </FormGroup>\r\n            <Button color=\"warning\"\r\n            className=\"btn-lg  btn-block\"\r\n            type=\"submit\"\r\n            disabled={buttonIsDisabled}>Update Class</Button>\r\n        </Form>\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default InstructorUpdateForm;\r\n\r\n\r\n ","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\InstructorLogin.js",["72","73"],"import React,{useState} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n// import NavBar from './NavBar';\r\nimport {Form,Input,Label,FormGroup,Button } from 'reactstrap';\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default function InstructorLogin() {\r\n    // const [loginInfo,setLoginInfo]=useState();\r\n    const history=useHistory();\r\n    \r\n    const [loginData,setLoginData]=useState({\r\n      username:\"\",\r\n      password:\"\"\r\n    }); \r\n  \r\n    const[error,setError] =useState(\"\");\r\n  \r\n    const handleChange=(e)=>{\r\n      setLoginData({...loginData,\r\n      [e.target.name]:e.target.value});\r\n    }\r\n  \r\n    const url = '#herokoo.com';\r\n  \r\n    const handleSubmit=(e)=>{\r\n        console.log('on submit=',loginData);\r\n      e.preventDefault();\r\n      axios //to be replaced with axiosWithAuth once login is ready\r\n          .post(`https://jsonplaceholder.typicode.com/posts`, loginData)\r\n          .then((res)=>{\r\n            console.log('Response back from reqres:',res.data)\r\n            // setLoginData(res.data)\r\n            // window.localStorage.setItem('token', res.data)\r\n            history.push('/instructor/dashboard')\r\n            //clear server error\r\n            // setError(null);      \r\n          })\r\n      .catch(err=>{\r\n        console.log('error in loginData call',err);\r\n        setError(\"Invalid Login name or Password\");\r\n        console.log('Login Failed for the User:',loginData.username);\r\n      })\r\n    }\r\n  \r\n    const routeToRegister=(e)=>{\r\n       history.push('/signup');\r\n    }\r\n\r\nreturn (\r\n    <>\r\n    <Form className=\"login-form\"  \r\n      onSubmit={handleSubmit}\r\n      name=\"login\"\r\n      >\r\n       <h2 className=\"text-center\">Welcome !</h2>\r\n       <FormGroup className=\"text-left\">\r\n        <Label htmlFor=\"username\"> UserName </Label>\r\n        <Input type=\"text\"\r\n        id=\"username\"\r\n        name=\"username\"\r\n        value={loginData.username}\r\n        onChange={handleChange}\r\n        placeholder=\"Enter your email\"\r\n        />\r\n        </FormGroup>\r\n\r\n        <FormGroup className=\"text-left\">\r\n        <Label htmlFor=\"password\"> Password </Label>\r\n        <Input type=\"password\"\r\n        id=\"password\"\r\n        name=\"password\"\r\n        value={loginData.password}\r\n        onChange={handleChange}\r\n        placeholder=\"Password\"\r\n        />\r\n        </FormGroup>\r\n      \r\n       <Button className=\"btn-lg btn-dark btn-block\"\r\n       type=\"submit\"\r\n       >Log in</Button>\r\n        <p className=\"pt-4\">Haven't registered yet?\r\n        <Button \r\n        className=\"ml-3\"\r\n        onClick={routeToRegister}\r\n         >Register</Button>\r\n         </p>\r\n       \r\n        <div className=\"text-center p-2\">\r\n          <a href=\"/forgot-password\">Forgot Password</a>\r\n        </div>\r\n    </Form>\r\n\r\n    </>   \r\n)\r\n\r\n}","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Register.js",["74"],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\PrivateRoute.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\utils\\axiosWithAuth.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":77,"column":6,"nodeType":"81","endLine":77,"endColumn":17,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":5,"column":8,"nodeType":"85","messageId":"86","endLine":5,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":84,"column":6,"nodeType":"81","endLine":84,"endColumn":17,"suggestions":"87"},{"ruleId":"83","severity":1,"message":"88","line":109,"column":9,"nodeType":"85","messageId":"86","endLine":109,"endColumn":12},{"ruleId":"83","severity":1,"message":"89","line":130,"column":9,"nodeType":"85","messageId":"86","endLine":130,"endColumn":19},{"ruleId":"83","severity":1,"message":"90","line":17,"column":11,"nodeType":"85","messageId":"86","endLine":17,"endColumn":16},{"ruleId":"83","severity":1,"message":"88","line":24,"column":11,"nodeType":"85","messageId":"86","endLine":24,"endColumn":14},{"ruleId":"79","severity":1,"message":"80","line":70,"column":6,"nodeType":"81","endLine":70,"endColumn":16,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["94"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar",["95"],"'url' is assigned a value but never used.","'handleBack' is assigned a value but never used.","'error' is assigned a value but never used.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"100","fix":"101"},"Update the dependencies array to be: [classInfo, formSchema]",{"range":"102","text":"103"},{"range":"104","text":"103"},"Update the dependencies array to be: [formSchema, userInfo]",{"range":"105","text":"106"},[2575,2586],"[classInfo, formSchema]",[3018,3029],[2179,2189],"[formSchema, userInfo]"]