[{"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\index.js":"1","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\reportWebVitals.js":"2","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\App.js":"3","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Home.js":"4","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorDashboard.js":"5","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorCreate.js":"6"},{"size":563,"mtime":1608259712130,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1608178925675,"results":"9","hashOfConfig":"8"},{"size":599,"mtime":1608259712126,"results":"10","hashOfConfig":"8"},{"size":0,"mtime":1608178925660,"results":"11","hashOfConfig":"8"},{"size":652,"mtime":1608259712130,"results":"12","hashOfConfig":"8"},{"size":7926,"mtime":1608259712126,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"119rrdn",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\index.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\reportWebVitals.js",[],["29","30"],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\App.js",["31","32","33","34"],"import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Home from './components/Home';\r\n\r\nimport './App.css';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <BrowserRouter>\r\n    <div className= 'app'>\r\n      <Route component={Home} path='/' exact/>\r\n      </div>\r\n      </BrowserRouter>\r\n  )\r\n}","C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Home.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorDashboard.js",[],"C:\\Users\\vasan\\Documents\\mygithub\\Front-End-Anywherefitness\\src\\components\\Instructor\\InstructorCreate.js",["35","36","37"],"import React,{useState,useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport { Form,FormGroup,Input,Label,Button,Badge} from 'reactstrap';\r\nimport * as yup from \"yup\";\r\nimport axios from \"axios\";\r\n\r\nfunction InstructorCreate({setClassList}){\r\n    const history=useHistory();\r\n    \r\n    const [classInfo, setClassInfo]=useState({\r\n        class_name:\"\",\r\n        class_description:\"\",\r\n        class_type:\"\",\r\n        class_intensity:\"\",\r\n        class_location:\"\",\r\n        class_starttime:\"\",\r\n        class_duration:\"\",\r\n        class_maxsize:\"\",\r\n    })\r\n\r\n    // control whether or not the form can be submitted if there are errors in form validation (in the useEffect)\r\n    const [buttonIsDisabled, setButtonIsDisabled] = useState(true);\r\n\r\n    // server error\r\n    const [serverError, setServerError] = useState(\"\");\r\n\r\n    // managing state for errors. empty unless inline validation (validateInput) updates key/value pair to have error\r\n      const [errors, setErrors] = useState({\r\n        class_name:\"\",\r\n        class_description:\"\",\r\n        class_type:\"\",\r\n        class_intensity:\"\",\r\n        class_location:\"\",\r\n        class_starttime:\"\",\r\n        class_duration:\"\",\r\n        class_maxsize:\"\",\r\n      });\r\n\r\n      const handleChange=(e)=>{\r\n        e.persist();\r\n        const newClassInfo = {\r\n            ...classInfo,\r\n            [e.target.name]:e.target.value\r\n          };\r\n          validateChange(e); // for each change in input, do inline validation\r\n          console.log('After validate err State=', errors)\r\n          setClassInfo(newClassInfo); // update state with new data\r\n    }\r\n\r\n    //inline validation of one key-value pair at a time with yup\r\n  const validateChange =(e)=>{\r\n    yup.reach(formSchema, e.target.name)\r\n    .validate(e.target.value)\r\n    .then((valid) => {\r\n      // the input is passing ! & reset of that input's error\r\n      console.log(\"valid here\", e.target.name);\r\n      setErrors({ ...errors, [e.target.name]: \"\" });\r\n    })\r\n    .catch((err) => {\r\n      // the input is breaking form schema\r\n      console.log(\"err here\", err);\r\n      setErrors({ ...errors, [e.target.name]: err.errors[0] });\r\n    });\r\n }\r\n\r\n  // whenever state updates, validate the entire form.\r\n  // if valid, then change button to be enabled.\r\n  useEffect(() => {\r\n    formSchema.isValid(classInfo).then((valid) => {\r\n      console.log(\"is my form valid?\", valid);\r\n      // valid is a boolean \r\n      setButtonIsDisabled(!valid);\r\n    });\r\n  }, [classInfo]);\r\n\r\n  // Add a schema, used for all validation to determine whether the input is valid or not\r\n  const formSchema = yup.object().shape({\r\n    class_name: yup.string()\r\n    .min(2,\"Please enter name of atleast 2 characters\")\r\n    .required(\"ClassName is required!\"),\r\n    \r\n    class_description:yup.string(),\r\n\r\n    class_type:yup.string().required(\"Choose Type is required!\"),\r\n\r\n    class_intensity: yup.string()\r\n    .oneOf([\"Beginner\",\"Intermediate\",\"Advanced\"])\r\n    .required(\"Please choose one\"),\r\n\r\n    class_location: yup.string().required(\"Location is required!\"),\r\n\r\n    class_starttime: yup.string().required(\"date & time is required!\"),\r\n\r\n    class_duration:yup.string().required(\"Duration is required!\"),\r\n    \r\n    class_maxsize:yup.string().required(\"Maxsize is required!\"),\r\n  });\r\n\r\n  const url = 'xxx.herokuapp.com';\r\n\r\n  const handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n    console.log('on submit=',classInfo)\r\n    axios //to be replaced with axiosWithAuth once login is ready\r\n          .post(`https://jsonplaceholder.typicode.com/posts`, classInfo)\r\n          .then((res)=>{\r\n            console.log('Response back from reqres:',res.data)\r\n            setClassList(res.data)\r\n            // history.push('/dashboard/classes')\r\n            //clear server error\r\n            setServerError(null);      \r\n          })\r\n          .catch((err)=>{\r\n            console.log('server erro in post',err)\r\n            setServerError(\"oops! Looks like server side error!\");\r\n          }) \r\n          \r\n  }\r\n\r\nreturn(\r\n    <>\r\n    <h3>Hello Instructor Name! <br/><Badge color=\"primary\">Create new Class</Badge></h3>\r\n    <div className=\"ins_create\">\r\n        <Form onSubmit={handleSubmit}\r\n         name=\"inscreate\">\r\n        {serverError && <p className=\"error\">{serverError}</p>}\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_name\">Class Name</Label>\r\n            <Input name=\"class_name\"\r\n            id=\"class_name\"\r\n            value={classInfo.class_name}\r\n            onChange={handleChange}\r\n            placeholder=\"Burn With us!\"/>\r\n             {errors.class_name.length > 0 ? <p className=\"error\">{errors.class_name}</p> : null}\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_description\">Class Description</Label>\r\n            <Input name=\"class_description\"\r\n            id=\"class_description\"\r\n            type=\"textarea\"\r\n            row=\"4\"\r\n            value={classInfo.class_description}\r\n            onChange={handleChange}\r\n            placeholder=\"Pre-requisites, things to bring...\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_type\">Class Type</Label>\r\n            <Input\r\n            name=\"class_type\"\r\n            type=\"select\"\r\n            id=\"class_type\"\r\n            value={classInfo.class_type}\r\n            onChange={handleChange}>\r\n            <option value=\"\">***Please Choose One!***</option>\r\n            <option>Strength Training</option>\r\n            <option>Spin Class</option>\r\n            <option>Power Lift</option>\r\n            <option>Yoga</option>\r\n            <option>Pilates</option>\r\n            </Input> \r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_intensity\">Class Intensity</Label>\r\n            <Input\r\n            type=\"select\"\r\n            name=\"class_intensity\"\r\n            id=\"class_intensity\"\r\n            value={classInfo.class_intensity}\r\n            onChange={handleChange}>\r\n            <option value=\"\">***Please Choose One!***</option>\r\n            <option>Beginner</option>\r\n            <option>Intermediate</option>\r\n            <option>Advanced</option>\r\n            </Input> \r\n            </FormGroup>\r\n{/* q: backend, 4 fields for location? */}\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_location\">Class Location</Label>\r\n            <Input name=\"class_location\"\r\n            id=\"class_location\"\r\n            value={classInfo.class_location}\r\n            onChange={handleChange}\r\n            placeholder=\"Street,City,State,Zip\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_starttime\">Class Start Time</Label>\r\n            <Input name=\"class_starttime\"\r\n            id=\"class_starttime\"\r\n            type=\"datetime-local\"\r\n            value={classInfo.class_startime}\r\n            onChange={handleChange}\r\n            placeholder=\"00:00\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_duration\">Class Duration</Label>\r\n            <Input name=\"class_duration\"\r\n            id=\"class_duration\"\r\n            type=\"number\"\r\n            value={classInfo.class_duration}\r\n            onChange={handleChange}\r\n            placeholder=\"30minutes\"/>\r\n            </FormGroup>\r\n\r\n            <FormGroup>\r\n            <Label htmlFor=\"class_maxsize\">Class Max Size</Label>\r\n            <Input name=\"class_maxsize\"\r\n            id=\"class_maxsize\"\r\n            type=\"number\"\r\n            min=\"3\"\r\n            max=\"50\"\r\n            value={classInfo.class_maxsize}\r\n            onChange={handleChange}\r\n            />\r\n            </FormGroup>\r\n            <Button color=\"success\"\r\n            className=\"btn-lg  btn-block\"\r\n            type=\"submit\"\r\n            disabled={buttonIsDisabled}>Create Class</Button>\r\n        </Form>\r\n    </div>\r\n    </>\r\n)\r\n}\r\n\r\nexport default InstructorCreate;\r\n\r\n\r\n ",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":32,"nodeType":"44","messageId":"45","endLine":2,"endColumn":38},{"ruleId":"42","severity":1,"message":"46","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":27},{"ruleId":"42","severity":1,"message":"47","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":24},{"ruleId":"42","severity":1,"message":"48","line":11,"column":20,"nodeType":"44","messageId":"45","endLine":11,"endColumn":32},{"ruleId":"42","severity":1,"message":"49","line":8,"column":11,"nodeType":"44","messageId":"45","endLine":8,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":74,"column":6,"nodeType":"52","endLine":74,"endColumn":17,"suggestions":"53"},{"ruleId":"42","severity":1,"message":"54","line":99,"column":9,"nodeType":"44","messageId":"45","endLine":99,"endColumn":12},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'InstructorDashboard' is defined but never used.","'InstructorCreate' is defined but never used.","'setClassList' is assigned a value but never used.","'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formSchema'. Either include it or remove the dependency array.","ArrayExpression",["57"],"'url' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [classInfo, formSchema]",{"range":"60","text":"61"},[2500,2511],"[classInfo, formSchema]"]